It’s 2023, inflation has hit us even harder than now and the European Central Bank has established a new virtual currency, called neuro. For now, neuro has only coins which correspond to 1 (whole) neuro and its denominations in cents (1 cent, 9 cents and 49 cents). Obviously, whoever thought of these denominations had a funny sense of math! You are asked to develop a program that changes a given amount of neuro money into smaller monetary units. The program lets the user enter an amount as a double value representing a total in neuros (e.g. 11.56), and outputs a listing of the monetary equivalent in the number of coins (choosing among neuro-coins, 49-cent coins, 9-cent coins, and 1-cent coins) so as to result in the minimum number of coins, while keeping in mind that we have a preference for coins of larger value, i.e. we start with the neuro-coins and continue down the denominations.


First your program should ask the user what is the amount they have:

What is your amount?:
Example Input:

11.56
Example Output:

11

1

0

7
The output should be given in 4 lines where the first line shows the number of neuro-coins, the second line the number of 49-cent-coins, the third line the number of 9-cent coins and the fourth line the number of 1-cent-coins. Your program needs to print all 4 lines, even if a denomination is zero. No other text should be printed.

Some hints to help you

The decimal can be either “.” or “,” depending on the locale settingsLinks to an external site. of your computer (so either 11.56 or 11,56).
This assignment can be solved only with what you know from week 1. Do not use any other commands, statements, etc.
Recall that we are looking for the minimum number of coins, e.g. in the above example a mathematically correct answer would be 11 neuro-coins and 56 1-cent coins, however that leads to 67 coins in total!